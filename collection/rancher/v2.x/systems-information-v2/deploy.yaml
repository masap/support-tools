apiVersion: v1
kind: Pod
metadata:
  name: rancher-systems-summary-pod
  namespace: cattle-system
spec:
  serviceAccountName: rancher
  containers:
    - name: rancher-systems-summary
      image: rancherlabs/swiss-army-knife
      command: ["/bin/bash", "-c"]
      args:
        - |
          echo 'Rancher Systems Summary Report';
          echo '==============================';
          echo "Run on $(date)";
          echo;
          kubectl -n cattle-system get pods -l app=rancher;
          echo "Rancher version: $(kubectl get settings.management.cattle.io server-version --no-headers -o custom-columns=version:value)";
          echo "Rancher id: $(kubectl get settings.management.cattle.io install-uuid --no-headers -o custom-columns=id:value)";
          echo;
          kubectl get clusters.management.cattle.io -o custom-columns=Cluster\ Id:metadata.name,Name:spec.displayName,K8s\ Version:status.version.gitVersion,Provider:status.provider,Created:metadata.creationTimestamp,Nodes:status.appliedSpec.rancherKubernetesEngineConfig.nodes[*].address;
          CLUSTER_IDS=$(kubectl get cluster.management.cattle.io --no-headers -o custom-columns=id:metadata.name);
          for ID in $CLUSTER_IDS; do
            CLUSTER_NAME=$(kubectl get cluster.management.cattle.io ${ID} --no-headers -o custom-columns=name:spec.displayName);
            NODE_COUNT=$(kubectl get nodes.management.cattle.io -n ${ID} --no-headers 2>/dev/null | wc -l );
            ((TOTAL_NODE_COUNT += NODE_COUNT));
            echo;
            echo '--------------------------------------------------------------------------------';
            echo "Cluster: ${CLUSTER_NAME} (${ID})";
             kubectl get nodes.management.cattle.io -n ${ID} -o custom-columns=Node\ Id:metadata.name,Address:status.internalNodeStatus.addresses[*].address,etcd:spec.etcd,Control\ Plane:spec.controlPlane,Worker:spec.worker,CPU:status.internalNodeStatus.capacity.cpu,RAM:status.internalNodeStatus.capacity.memory,OS:status.internalNodeStatus.nodeInfo.osImage,Container\ Runtime\ Version:status.internalNodeStatus.nodeInfo.containerRuntimeVersion,Created:metadata.creationTimestamp;
            echo "Node count: ${NODE_COUNT}";
          done;
          echo '--------------------------------------------------------------------------------';
          echo "Total node count: ${TOTAL_NODE_COUNT}";
  restartPolicy: Never
